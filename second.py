# На прямой дороге расположено n банкоматов. Было решено 
# построить ещё k банкоматов для того, чтобы уменьшить 
# расстояние между соседними банкоматами. 
# На вход подаются натуральные числа n и k, а также n 
# расстояний L, где Li – расстояние между банкоматами i и 
# i+1. Напишите функцию, которая добавляет k банкоматов таким 
# образом, чтобы максимальное расстояние между 
# соседними банкоматами являлось минимально возможным, и 
# возвращает список новых расстояний между банкоматами.
# Пример
# Ввод        Вывод
# 5 3         50
# 100         50
# 180         90
# 50          90
# 60          50
# 150         60
#             75
#             75

n = int(input("Введите n количество банкоматов расположенных на прямой дороге - "))
k = int(input("Введите k количество банкоматов, которые необходимо построить - "))
list = []

print("Введите L(i) расстояние")
for i in range(n):
    list.append(input(str(i+1) + " - "))

'''
# Для теста
n = 5
k = 10
list = [70.0, 515.0, 50.0, 60.0, 80.0]
'''

def build(list, k):
    new_list = list[:] # копируем список, чтобы определить конечное расстояние с помощью количества банкоматов
    list_count = [1] * len(list) # сколько банкоматов построить на определенном участке

    while k > 1:# пока есть свободные банкоматы
        max_range = max(new_list) # определяем наибольшее расстояние между двумя
        index = new_list.index(max_range) # и индекс наибольшего в списке
        list_count[index] += 1 # увеличиваем количество банкоматов на выбранном промежутке
        new_list[index] = list[index] / list_count[index] # задаем новое расстояние
        k -= 1

    list.clear()
    for i in range(len(new_list)): # заносим новые значения в список расстояний между банкоматами
        list.extend([round(new_list[i], 2)] * list_count[i])

    for i in list: # печатаем список
        print(i)

build(list, k)    